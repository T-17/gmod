--  _____           _   _           _ _ 
-- |  ___|__   ___ | |_| |__   __ _| | |
-- | |_ / _ \ / _ \| __| '_ \ / _` | | |
-- |  _| (_) | (_) | |_| |_) | (_| | | |
-- |_|  \___/ \___/ \__|_.__/ \__,_|_|_|

configs = {}

local white = "models/debug/debugwhite"
local red = "phoenix_storms/pack2/redlight"
local blue = "phoenix_storms/pack2/darkblue"
local black = "phoenix_storms/black_chrome"

configs.football = {
    model = "models/props_phx/misc/soccerball.mdl",
    sounds = {
        "physics/rubber/rubber_tire_impact_hard1.wav",
        "physics/rubber/rubber_tire_impact_hard2.wav",
        "physics/rubber/rubber_tire_impact_hard3.wav",
    },
    normalShot = {
        normal = 200,
        aimed  = 300,
        z      = {
            min = 0,
            max = 250,
        },
    },
    runShot = {
        normal = 400,
        aimed  = 300,
   },
    strongShot = {
        normal =  50,
        aimed  =  1250,
        trail  = {
            mat = "trails/smoke",
            color = Color(128, 128, 255),
        },
    },
    superShot = {
        normal = 300,
        aimed  = 2000,
        trail  = {
            mat = "trails/smoke",
            color = Color(128, 255, 128),
        },

    },
    tallShot = {
        normal = 0,
        aimed  = 350,
        z      = {
            min = 500,
            max = 500,
        },
    },
    aimedShot = {
        aimed = 2000,
        z     = {
            min = 0,
            max = 100,
        },
        trail  = {
            mat = "trails/smoke",
            color = Color(255, 128, 128),
        },
    },
    headShot = {
        normal = 500,
        aimed  = 250,
    },
    stopShot = {
        normal = 50,
        aimed  = 0,
        z      = {
            min = 0,
            max = 10,
        },
    },
    layouts = {
    {
        [0] = black,
        [1] = white,
        [2] = black,
        [3] = white,
    },
    {
        [0] = black,
        [1] = white,
        [2] = red,
        [3] = black,
    },
    {
        [0] = black,
        [1] = white,
        [2] = blue,
        [3] = white,
    },
    {
        [0] = black,
        [1] = white,
        [2] = blue,
        [3] = red,
    },
    }

}

configs.puck = {
    model = "models/Mechanics/gears2/vert_36t1.mdl",
    color = Color(50, 50, 50, 255),
    sounds = {
        "physics/metal/metal_canister/impact_soft1.wav",
        "physics/metal/metal_canister/impact_soft2.wav",
        "physics/metal/metal_canister/impact_soft3.wav",
    },
    normalShot = {
        normal = 200,
        aimed  = 300,
        z      = {
            min = 0,
            max = 0,
        },
    },
    runShot = {
        normal = 400,
        aimed  = 300,
        z      = {
            min = 0,
            max = 0,
        },
   },
    strongShot = {
        normal =  50,
        aimed  =  1250,
        z      = {
            min = 0,
            max = 0,
        },
        trail  = {
            mat = "trails/smoke",
            color = Color(128, 128, 255),
        },
    },
    superShot = {
        normal = 300,
        aimed  = 2000,
        z      = {
            min = 0,
            max = 0,
        },
        trail  = {
            mat = "trails/smoke",
            color = Color(128, 255, 128),
        },
    },
    tallShot = {
        normal = 0,
        aimed  = 350,
        z      = {
            min = 0,
            max = 0,
        },
    },
    aimedShot = {
        aimed = 2000,
        z      = {
            min = 0,
            max = 0,
        },
        trail  = {
            mat = "trails/smoke",
            color = Color(255, 128, 128),
        },
    },
    headShot = {
        normal = 500,
        aimed  = 250,
        z      = {
            min = 0,
            max = 0,
        },
    },

    stopShot = {
        normal = 50,
        aimed  = 0,
        z      = {
            min = 0,
            max = 0,
        },
    },
}

local function mulTable(tbl, mul)
    for k, v in pairs(tbl) do
        if type(v) == "number" then
            tbl[k] = v * mul
        elseif type(v) == "table" then
            mulTable(v, mul)
        end
    end
end

function createConfig(name, mul)
    local t = table.copy(configs[name])
    mulTable(t, mul)
    return t
end


-- vim: ft=lua tabstop=8 softtabstop=0 expandtab shiftwidth=4 smarttab
