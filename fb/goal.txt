--[[
MIT License

Copyright (c) 2016 suun

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
--]]

local curtime = timer.curtime

goals = {}

local selecting

hook.add("Command", "Goal", function(cmd, args)
    if cmd ~= "goal" then return end
    
    local action = table.remove(args, 1)
    local name = table.remove(args, 1)
    local goal = owner():getEyeTrace().Entity
    
    if action == "create" then
        if (not name) or (not fbteams[name]) then
            print("Can't find team \"" .. tostring(name) .. "\"")
            return
        end
        selecting = {}
        selecting.name = name
        selecting.holo = holograms.create(vec2vec(owner():getEyeTrace().HitPos), Angle(0, 0, -90), "models/props_junk/TrashDumpster02.mdl", Vector(1,1,1))
    elseif action == "remove" then
        if not goal then
            print("You need to look at an entity!")
            return
        end
        if (not goal.entIndex) or (not goals[goal:entIndex()]) then
            print("The entity isn't a registered goal!")
            return
        end
        local name = goals[goal].name
        fbteams[name].goal = nil
        goals[goal:entIndex()] = nil
        goal:remove()
    end
end)

hook.add("think", "Select", function()
    if not selecting then return end
    selecting.holo:setPos(owner():getEyeTrace().HitPos)
end)



local lastrotated = curtime() -- for delay
hook.add("KeyPress", "Select", function(ply, key)
    if not selecting then return end
    if ply ~= owner() then return end
    if key == 32 then -- E
        
        local e = prop.create(vec2vec(owner():getEyeTrace().HitPos), selecting.holo:getAngles(), "models/props_junk/TrashDumpster02.mdl", Vector(1,1,1))
            
        fbteams[selecting.name].goal = e
        goals[e:entIndex()] = {name=selecting.name}
        
        selecting.holo:remove()
        selecting = nil
    elseif key == 8192 and (curtime() - lastrotated) > 0.5 then -- R
        lastrotated = curtime()
        local ang = selecting.holo:getAngles()
        ang.y = ang.y + 45
        selecting.holo:setAngles(ang)
    end
end)    

-- vim: ft=lua
